---
import { getCollection } from 'astro:content';
import {
  getPostSlug,
  type IBlogEntry,
  type IBlogPostMeta
} from '@/content/config';
import BaseLayout from '@/layouts/base.astro';
import { AuthorMeta, TagButton } from '@/components/component-fragment';
import PostFooter from '@/components/post-footer.astro';
import { getMarkdownExcerpt } from '@/common/utils';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: {
      postSlug: getPostSlug(post.data as IBlogPostMeta)
    },
    props: {
      entry: post
    }
  }));
}

type Props = {
  entry: IBlogEntry;
};

const { entry } = Astro.props;
const { Content } = await entry.render();
const postDescription =
  entry.data.description || (await getMarkdownExcerpt(entry.body, true));
---

<BaseLayout title={entry.data.title} description={postDescription}>
  <article
    class="prose  max-w-4xl prose-zinc dark:prose-invert mx-auto px-4 mb-4"
  >
    <h1 class="post-title" transition:name={entry.id}>
      {entry.data.title}
    </h1>
    <AuthorMeta
      createdAt={entry.data.date}
      categories={entry.data.categories}
    />
    <Content />
    {
      entry.data.tags && entry.data.tags.length && (
        <div>
          <span class="mr-2 text-slate-400 text-sm">æ ‡ç­¾ </span>
          {entry.data.tags.map((n) => (
            <TagButton name={n} />
          ))}
        </div>
      )
    }
  </article>
  <PostFooter entry={entry} />

  <style is:global lang="scss">
    article {
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        position: relative;
        .icon-link {
          position: absolute;
          left: -1em;
          opacity: 0;
          &::after {
            content: 'ðŸ”—';
            font-size: 0.6em;
          }
        }
        &:hover .icon-link {
          opacity: 1;
        }
      }
    }
    .post-title {
      margin-bottom: 0.2em;
    }
  </style>
  <script type="text/javascript">
    function initPage() {
      document.body.querySelectorAll('article img').forEach((img) => {
        const title = img.getAttribute('title') || img.getAttribute('alt');
        if (!title) return;
        const figure = document.createElement('figure');
        img.parentNode.replaceChild(figure, img);
        figure.appendChild(img);
        img.insertAdjacentHTML(
          'afterend',
          `<figcaption class="text-center italic">${title}</figcaption>`
        );
      });
      (adsbygoogle = window.adsbygoogle || []).push({});
    }
    document.addEventListener('astro:page-load', initPage);
  </script>
</BaseLayout>
